<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Blog by Hawaijar]]></title><description><![CDATA[Personal blogs of Hawaijar]]></description><link>https://lumen.netlify.com</link><generator>GatsbyJS</generator><lastBuildDate>Tue, 05 Jan 2021 17:00:13 GMT</lastBuildDate><item><title><![CDATA[I learn today - Java Exceptions 101]]></title><description><![CDATA[Java Exceptions 101]]></description><link>https://lumen.netlify.com/posts/i-learn-today-05-Jan-2021</link><guid isPermaLink="false">https://lumen.netlify.com/posts/i-learn-today-05-Jan-2021</guid><pubDate>Tue, 05 Jan 2021 06:09:25 GMT</pubDate><content:encoded>&lt;h2 id=&quot;item-1&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#item-1&quot; aria-label=&quot;item 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ITEM 1:&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;In Java, anything except primitives is &lt;em&gt;Object&lt;/em&gt; and by that definition, &lt;em&gt;Exceptions&lt;/em&gt; are _Objects. Exceptions indicate that some events that shouldn’t have happened (or intended) occurred in the system.  Broadly, there’re two exceptional events:    &lt;strong&gt;Exceptions and Errors&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Exceptions and Errors&lt;/strong&gt; are sub-types of &lt;strong&gt;Throwable&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;		Object
		  |
		  |
	   Throwable
	     /  \
 		/    \
     Error   Exception
	 	&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;item-2&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#item-2&quot; aria-label=&quot;item 2 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ITEM 2:&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Exceptions are handled by enclosing the expected code/block (that might throw exceptions) with &lt;strong&gt;try&lt;/strong&gt; / &lt;strong&gt;catch or finally&lt;/strong&gt; block. Either &lt;strong&gt;catch&lt;/strong&gt; or &lt;strong&gt;finally&lt;/strong&gt; (or &lt;strong&gt;both&lt;/strong&gt;) is required following the &lt;strong&gt;try&lt;/strong&gt; block. If both are missing following the &lt;strong&gt;try&lt;/strong&gt; block, it’ll be a compilation issue.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;item-3&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#item-3&quot; aria-label=&quot;item 3 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ITEM 3:&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;There can be multiple &lt;strong&gt;catch block/clause&lt;/strong&gt; following the &lt;strong&gt;try&lt;/strong&gt; block. However, the order of &lt;strong&gt;catch clauses&lt;/strong&gt; matter when they belong to parent/child relationships but not with siblings.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;What this implies is that, when a try block is followed by multiple &lt;strong&gt;catch clauses/blocks&lt;/strong&gt;, and if they’re related to one another as Parent/Child hierarchy, then they should be arranged bottom up, with the most generic type at the bottom.&lt;/p&gt;
&lt;p&gt;Here is an example. Imagine A, B, C are types of Exception and A is the root of this relationship. If we need to catch an exception based on them, here’s what we need to layout -&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;	try {
		...
		...
	}
	catch(C) {
		...
	}
	catch(B) {
		...
	}
	catch(A) {
		...
	}
	finally {
		// code clean up
	}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If we reverse the layout with A being at the top, &lt;strong&gt;it will consume exceptions that belong to B and C&lt;/strong&gt; and that doesn’t make sense. So, the compiler will throw a compilation problem.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;However&lt;/strong&gt;, this rule doesn’t apply when the exceptions are &lt;em&gt;siblings&lt;/em&gt; to one another (not Parent/child type). In that situation, &lt;strong&gt;the order doesn’t matter&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id=&quot;item-4&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#item-4&quot; aria-label=&quot;item 4 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ITEM 4:&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;All exceptions (excpept Runtime exceptions and errors) &lt;strong&gt;must be declared or handled&lt;/strong&gt; otherwise, compilation issue will occur as Compiler checks as a rule of &lt;strong&gt;Checked Exception&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Below example will throw a compilation issue -&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;// inside a class

function bar() {
	throw new Exception();
}

function foo() {
	bar();
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;However, either &lt;em&gt;declare&lt;/em&gt; or &lt;em&gt;handle&lt;/em&gt; shall avoid compilation issue.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Case 1: Declaring an exception&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;function bar() {
	throw new Exception();
}

function foo() throws Exception {
	bar();
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Case 2: Handle an exception&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;function bar() {
	throw new Exception();
}

function foo(){
	try {
		bar();
	}
	catch(Exception e) {
		...
	}
	
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;item-5&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#item-5&quot; aria-label=&quot;item 5 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ITEM 5:&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Finally clause, if present, runs regardless of whether an exception occurs or not.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;When exception doesn’t occur in &lt;em&gt;try block&lt;/em&gt;, &lt;em&gt;finally&lt;/em&gt; will run&lt;/li&gt;
&lt;li&gt;When exception occurs and handles in any of the &lt;em&gt;catch block&lt;/em&gt;, &lt;em&gt;finally&lt;/em&gt; will also (run after them)&lt;/li&gt;
&lt;li&gt;If there is a &lt;em&gt;return&lt;/em&gt; statement inside &lt;em&gt;try/catch&lt;/em&gt; block, &lt;em&gt;finally&lt;/em&gt; will also run (before returning)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;However&lt;/em&gt;, &lt;em&gt;the only condition when finally shall not run is when JVM shuts down. E.g. When there is a System.exit() invocation inside try/catch block, finally shall not be invoked&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;item-6&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#item-6&quot; aria-label=&quot;item 6 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ITEM 6:&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Runtime exceptions are never checked by compiler and hence called &lt;strong&gt;Unchecked exceptions&lt;/strong&gt; E.g. &lt;strong&gt;Null Pointer Exception&lt;/strong&gt;, &lt;strong&gt;Arithmetic Exception&lt;/strong&gt;, &lt;strong&gt;ArrayIndexOfBoundException&lt;/strong&gt; etc. - something that compiler can’t check/verify before the code is executed. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In this case, the &lt;em&gt;handle or declare&lt;/em&gt; rule &lt;strong&gt;is not applicable&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id=&quot;item-7&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#item-7&quot; aria-label=&quot;item 7 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ITEM 7:&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Errors&lt;/strong&gt; are not a subtype of Exception, they don’t need to be declared. You’re free to declare it if you like, but the compiler just doesn’t care one way or another when or how the Error is thrown or by whom.&lt;/p&gt;
&lt;/blockquote&gt;</content:encoded></item><item><title><![CDATA[I learn today - Event Loop, Message Queue, Job Queue]]></title><description><![CDATA[Understanding Event Loop, Message Queue, Job Queue]]></description><link>https://lumen.netlify.com/posts/i-learn-today-31-Dec-2020</link><guid isPermaLink="false">https://lumen.netlify.com/posts/i-learn-today-31-Dec-2020</guid><pubDate>Thu, 31 Dec 2020 06:09:25 GMT</pubDate><content:encoded>&lt;p&gt;&lt;em&gt;Disclaimer&lt;/em&gt;: I don’t have the energy to explain in length these topics. They are the most boring things, at least to me, to spend a day. Given a couple of references below. There’s a lot out there that explains with a lot of fiery energy (including a video) on the net. In this topic, however, I would like to point one thing in particular that I learn it today - &lt;em&gt;Job Queue&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;what-is-an-event-loop&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#what-is-an-event-loop&quot; aria-label=&quot;what is an event loop permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is an Event Loop?&lt;/h2&gt;
&lt;p&gt;To me, I imagine this way - for every javascript file, &lt;strong&gt;in the end&lt;/strong&gt;, there’s an invisible &lt;em&gt;while loop&lt;/em&gt; sitting there to check whether some events had happened and invoke them if that occurred, otherwise exit the loop and terminate the program.&lt;/p&gt;
&lt;p&gt;Sounds confusing? Here is a rough idea -&lt;/p&gt;
&lt;p&gt;Imagine we have written the world’s best &lt;strong&gt;main.js&lt;/strong&gt; file as shown below -&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Hello World!&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here’s what I imagine a Node (or browser) does in this file. &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// your code&lt;/span&gt;
console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Hello World!&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// last line of your code - line: 1000&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// below is the event-loop inserted by the platform - node/browser&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;is there any events pending &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; the message queue &lt;span class=&quot;token constant&quot;&gt;OR&lt;/span&gt; job queue&lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	push them into the call stacks
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// program.exit(0);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I know that’s the most simplified (or stupid?) way of looking at it but that’s how I create a mental model of Event Loop 🤷&lt;/p&gt;
&lt;p&gt;Okay, what’s that mean in general? Well, for every function calls, we push them in the Stack. And so long as something is running in the Stack (meaning, there’re at least one function calls), the event loop can’t do anything. &lt;/p&gt;
&lt;p&gt;The control reaches the above &lt;em&gt;invisible&lt;/em&gt; while loop only when your program passes line no. 1000. If there’s any long time-consuming CPU/bound processing going on in your code (e.g infinite while loop, calculating Fibonacci w/o using memoization, calculating the age of the universe, finding alien traces in Mars, etc..), the control will delay reaching the event loop, thereby freezing any external asynchronous tasks (mouse events, timers, I/O operations) to execute their handlers. &lt;/p&gt;
&lt;p&gt;What’s that mean in practice? It means, if that happens in your browser, you can’t see the actual content of your page no matter how hard you try! If you’re using Chrome, you might notice sometime a pop-up window showing something like below. That’s the sign of the presence of long-running JS code in the Stack.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://arnaudbuchholz.github.io/blog/post/Timeout%20and%20WebWorker/Chrome%20long%20running%20script.png&quot; alt=&quot;long running script in Chrome&quot;&gt;&lt;/p&gt;
&lt;p&gt;When your code runs, it runs along with the so-called Event Loop and they’re running in the same single thread. Your code may invoke async operations but it won’t go/jump to their handlers right away because they’re handled in separate data-structures (different from Stack) in either &lt;strong&gt;Message Queue&lt;/strong&gt; or &lt;strong&gt;Job Queue&lt;/strong&gt;. But your code runs line after line no matter whether a line is invoking async operations or not. When it comes across async operations (like &lt;em&gt;setTimer&lt;/em&gt;, &lt;em&gt;Promises&lt;/em&gt;, IO/operations), it just delegates (to respective handlers - Web APIs) and continues execution of the main flow (your JS code). &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Let’s cut the long story to the short.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In the beginning, there was only &lt;strong&gt;Message Queue&lt;/strong&gt; to handle Async/operations (UI events - onClick, onLoad, setTimer(), setInterval(), I/O in case of Node). &lt;/p&gt;
&lt;p&gt;Here’s a simplified code -&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;I&apos;m foo&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;I&apos;m bar&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Main script&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;setTimer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;foo&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Program pretends to end here&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;setTimer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;bar&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And here’s the result of the program -&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;Main script
Program pretends to end here
I&amp;#39;m foo
I&amp;#39;m bar&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It runs line by line starting from the first line.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;First, - it defines a function variable called “foo” (first pass of JS parsing) - we’re not executing in the first pass.&lt;/li&gt;
&lt;li&gt;Next it defines another function variable called “bar”. These are the scope variables of the global context.&lt;/li&gt;
&lt;li&gt;There are no variables define after that. So, the second pass of JS (Execution stage) starts.&lt;/li&gt;
&lt;li&gt;Starting with console.log, printing &lt;strong&gt;Main script&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Next it registers (or delegates) invocation of setTimeout() to Web-APIs/handlers.&lt;/li&gt;
&lt;li&gt;Next, another console.log, printing &lt;strong&gt;Program pretends to end here&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Finally, register another setTimeout() to Web-Apis.
…
…&lt;/li&gt;
&lt;li&gt;Then we hit the invisible Event loop (while loop). Since the setTimeOuts() are registered at 0ms, they’ll immediately timeout and return one by one in the message queue (following FIFO).&lt;/li&gt;
&lt;li&gt;Since, the call stack is empty now, EL (Event Loop, hereafter) pushed the ‘foo’ function on the Stack, and on executing prints out &lt;strong&gt;I’m foo&lt;/strong&gt;. &lt;/li&gt;
&lt;li&gt;The same happens for bar and printing &lt;strong&gt;I’m bar&lt;/strong&gt; respectively.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;is-that-all&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#is-that-all&quot; aria-label=&quot;is that all permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Is that all?&lt;/h2&gt;
&lt;p&gt;Not yet but we’re very close to the end.&lt;/p&gt;
&lt;p&gt;I said earlier, &lt;strong&gt;in the beginning&lt;/strong&gt; because we have another one to discuss further - &lt;em&gt;Job Queue&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;With the introduction of &lt;strong&gt;Promises&lt;/strong&gt; in the &lt;em&gt;EcmaScript 2015 aka ES6&lt;/em&gt;, we have an efficient way of handling async/operations.
In the above, traditional way of handling async/ops using &lt;em&gt;setTimeout()&lt;/em&gt;, &lt;em&gt;UI Events&lt;/em&gt; etc, EL can’t push any &lt;em&gt;tasks&lt;/em&gt; in the &lt;em&gt;Message Queue&lt;/em&gt; unless anything is remaining in the Stack. &lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: &lt;em&gt;Task&lt;/em&gt; refers to the fulfilled events waiting in the &lt;em&gt;Message Queue&lt;/em&gt; to be picked up by EL.&lt;/p&gt;
&lt;p&gt;However, in the case of &lt;em&gt;Promises&lt;/em&gt;, they’re waiting in another data structure called &lt;em&gt;Job Queue&lt;/em&gt; or &lt;em&gt;Micro-task Queue&lt;/em&gt;. In this case, EL can preempt function invocations in the Stack if there are any fulfilled Promises waiting in the &lt;em&gt;Job Queue&lt;/em&gt;. That means, after every running any function (when it’s popped from the Stack), EL checks if there’s fulfilled &lt;em&gt;promises&lt;/em&gt; (in &lt;em&gt;Job Queue&lt;/em&gt;) and pick those and push to the Stack for their execution. What’s that mean? It means, EL doesn’t need to wait for all functions in the Stack to complete, it can preempt running the next function in the Stack if any Promises is waiting in the &lt;em&gt;Job Queue&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Let’s check with an example -&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;I&apos;m foo&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;I&apos;m bar&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Main script&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;foo&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;resolve&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; reject&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;token function&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;After bar() before foo()&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;resolve&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;resolve&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token function&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here’s the result after running the above code -&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;Main script
I&amp;#39;m bar
After bar() before foo()
I&amp;#39;m foo&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let’s go line by line of the code -&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;First, - it defines a function variable called “foo”.&lt;/li&gt;
&lt;li&gt;Second,- it defines another function variable called “bar”. &lt;/li&gt;
&lt;li&gt;There are no variables define after that. So, the second pass of JS (Execution stage) starts.&lt;/li&gt;
&lt;li&gt;Starting with console.log, printing &lt;strong&gt;Main script&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Next it registers (or delegates) invocation of setTimeout() to Web-APIs/handlers.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Next&lt;/strong&gt; it registers/invokes a new Promise operation and when done it’ll be available in the &lt;em&gt;Job Queue&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Next&lt;/em&gt;, we invoked bar() and prints out &lt;strong&gt;I’m bar&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;After bar() has been executed, EL checks whether there’s any fulfilled promise(s) in the _Job Queue&lt;/em&gt; and found one there.
It pushes its handler to the Stack and prints out &lt;strong&gt;After bar() before foo()&lt;/strong&gt;_
…
…&lt;/li&gt;
&lt;li&gt;Then the setTimeOuts() expires and pushes to the message queue (following FIFO).&lt;/li&gt;
&lt;li&gt;Since, the call stack is empty now, EL (Event Loop, hereafter) pushed the ‘foo’ function on the Stack, and on executing prints out &lt;strong&gt;I’m foo&lt;/strong&gt;. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Whew.. that’s too long but I feel I’m just scratching the details without actually going deeper into it. And I’m sure I won’t be doing that in the future&lt;/em&gt; 😬 &lt;em&gt;. Below are a few references if you want to swim deeper into the ocean&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;References&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://flaviocopes.com/javascript-event-loop/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://flaviocopes.com/javascript-event-loop/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=8aGhZQkoFbQ&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://www.youtube.com/watch?v=8aGhZQkoFbQ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[I learn today - Effective Java - Item 1]]></title><description><![CDATA[Effective Java - Item 1 - CONSIDER STATIC FACTORY METHODS INSTEAD OF CONSTRUCTORS]]></description><link>https://lumen.netlify.com/posts/i-learn-today-30-Dec-2020</link><guid isPermaLink="false">https://lumen.netlify.com/posts/i-learn-today-30-Dec-2020</guid><pubDate>Wed, 30 Dec 2020 06:09:25 GMT</pubDate><content:encoded>&lt;p&gt;&lt;img src=&quot;https://images-na.ssl-images-amazon.com/images/I/41zLisPNN2L._SX258_BO1,204,203,200_.jpg&quot; alt=&quot;Effective Java - Third Edition&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Effective Java&lt;/em&gt; consists of several &lt;strong&gt;“items,”&lt;/strong&gt; each presented in the form of a short, stand-alone essay that provides specific advice, insight into Java platform subtleties, and updated code examples. The comprehensive descriptions and explanations for each item illuminate what to do, what not to do, and why.&lt;/p&gt;
&lt;p&gt;The goal of the series is to extend the concept with my examples to complement the idea and understanding, though each item in the book contains enough examples and illustrations to prove the points.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;item-1-consider-static-factory-methods-instead-of-constructors&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#item-1-consider-static-factory-methods-instead-of-constructors&quot; aria-label=&quot;item 1 consider static factory methods instead of constructors permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ITEM 1: CONSIDER STATIC FACTORY METHODS INSTEAD OF CONSTRUCTORS&lt;/h2&gt;
&lt;p&gt;  We know that &lt;em&gt;static&lt;/em&gt; members belong to &lt;em&gt;class&lt;/em&gt; and not to &lt;em&gt;instances&lt;/em&gt;. And we also know that &lt;em&gt;constructors&lt;/em&gt; are the &lt;em&gt;only&lt;/em&gt; means of creating instances (until now!). Well, &lt;em&gt;this item&lt;/em&gt; introduces another way of creating instance - &lt;em&gt;static factory method&lt;/em&gt; and in some cases (which we’ll be seeing with examples) yields a better way of creating instances.
Let’s see with an example -&lt;/p&gt;
&lt;p&gt;  Say, we have a class &lt;em&gt;Book&lt;/em&gt; as follow -&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; name&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; author&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; ranking&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; publisher&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token comment&quot;&gt;// normal constructor(s)&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; author&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; ranking&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; publisher&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; name&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;author &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; author&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ranking &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; ranking&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;publisher &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; publisher&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; author&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; name&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;author &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; author&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; author&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; publisher&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; name&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;author &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; author&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;publisher &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; publisher&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;token comment&quot;&gt;// default constructor&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;  As you can see above, there are four(4) constructors (it could be more!) that we would use based on different parameters.&lt;/p&gt;
&lt;h2 id=&quot;key-takeaways&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#key-takeaways&quot; aria-label=&quot;key takeaways permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Key Takeaways&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;One advantage of static factory methods is that, unlike constructors, they have names.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;  Let’s add a static method in the above class (assume the following code are inside the above Book class).
As you can see, unlike a constructor(whose name always matches class name), we can define a meaningful factory method name.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;createBook&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 
  &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; author&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 
  &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; publisher&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 
  &lt;span class=&quot;token keyword&quot;&gt;boolean&lt;/span&gt; topRanking&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;/* return an instance of book */&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;A second advantage of static factory methods is that, unlike constructors, they are not required to create a new object each time they’re invoked&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Below, we always return an initialized static property(&lt;em&gt;aka singleton&lt;/em&gt;) when matching some input parameters&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;createBook&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Book&lt;/span&gt; TREASURE_ISLAND &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; 
  &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Treasure Island&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;R.L Stevenson&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Treasure Island&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; TREASURE_ISLAND&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;A third advantage of static factory methods is that, unlike constructors, they can return an object of any subtype of their return type. A fourth advantage of static factories is that the class of the returned object can vary from call to call as a function of the input parameters.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;  Let’s add a few subclasses of the &lt;em&gt;Book&lt;/em&gt; class:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Biography&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Category&lt;/span&gt; category&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Biography&lt;/span&gt; MY_EXPERIMENT_WITH_TRUTH &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;
			&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Biography&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;My experiment with truth&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;M.K Gandhi&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Biography&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; author&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; author&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;category &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Category&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;BIOGRAPHY&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;token annotation punctuation&quot;&gt;@Override&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Biography{&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;
				&lt;span class=&quot;token string&quot;&gt;&quot;name=&apos;&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; name &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&apos;\t&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;
				&lt;span class=&quot;token string&quot;&gt;&quot;author=&apos;&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; author &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&apos;\t&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;
				&lt;span class=&quot;token string&quot;&gt;&quot;category=&apos;&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; category &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&apos;&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;
				&lt;span class=&quot;token string&quot;&gt;&apos;}&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Comics&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Category&lt;/span&gt; category&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Comics&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; author&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; publisher&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; author&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; publisher&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;category &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Category&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;COMICS&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;token annotation punctuation&quot;&gt;@Override&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Comics{&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;
				&lt;span class=&quot;token string&quot;&gt;&quot;name=&apos;&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; name &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&apos;\t&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;
				&lt;span class=&quot;token string&quot;&gt;&quot;author=&apos;&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; author &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&apos;\t&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;
				&lt;span class=&quot;token string&quot;&gt;&quot;category=&apos;&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; category &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&apos;&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;
				&lt;span class=&quot;token string&quot;&gt;&apos;}&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Fiction&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Category&lt;/span&gt; category&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Fiction&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; author&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; publisher&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; author&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; publisher&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;category &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Category&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;FICTION&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Poem&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Category&lt;/span&gt; category&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Poem&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; author&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; publisher&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; author&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; publisher&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;category &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Category&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;POEM&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The idea of this point is that, unlike constructor, static factory method can return instances of subclasses as shown below:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
  publisher&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toLowerCase&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;contains&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;dc&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; 
    &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; 
  publisher&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toLowerCase&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;contains&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;marvel&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Comics&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; author&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; publisher&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toLowerCase&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;contains&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;harry porter&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Fiction&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; author&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; publisher&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;author&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toLowerCase&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;contains&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;emily dickinson&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Poem&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; author&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; publisher&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;A fifth advantage of static factories is that the class of the returned object need not exist when the class containing the method is written&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is the most complex point(at least to me), at first, to understand it. The idea is that we can define a generic static factory method that depends on the user’s configuration that determines what class to be instantiated during the runtime.&lt;/p&gt;
&lt;p&gt;Unlike constructors, the instance of the class is determined at the run time. Yes, something in the line of &lt;em&gt;dependency injection&lt;/em&gt;, to be precise.&lt;/p&gt;
&lt;p&gt;Here is the best example I could come up (after taking some time on the net) -
&lt;a href=&quot;https://stackoverflow.com/questions/11823773/understanding-the-concept-behind-service-provider-framework-like-jdbc-using-the&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://stackoverflow.com/questions/11823773/understanding-the-concept-behind-service-provider-framework-like-jdbc-using-the&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;topRanking&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token comment&quot;&gt;// Here, we don&apos;t know what&apos;s the &apos;top ranking book&apos;.&lt;/span&gt;
  &lt;span class=&quot;token comment&quot;&gt;// Whoever, using this static factory method has to define &lt;/span&gt;
  &lt;span class=&quot;token comment&quot;&gt;// their own &apos;top ranking book&apos; based on their preferences &lt;/span&gt;
  &lt;span class=&quot;token comment&quot;&gt;// and get the instance of it.&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;forName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getProperty&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;top-ranking-book&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;newInstance&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here is the gist containing the complete working code -&lt;/p&gt;
&lt;p&gt;&lt;div id=&quot;gist107166553&quot; class=&quot;gist&quot;&gt;
    &lt;div class=&quot;gist-file&quot;&gt;
      &lt;div class=&quot;gist-data&quot;&gt;
        &lt;div class=&quot;js-gist-file-update-container js-task-list-container file-box&quot;&gt;
  &lt;div id=&quot;file-ej-item1&quot; class=&quot;file my-2&quot;&gt;
    

  &lt;div itemprop=&quot;text&quot; class=&quot;Box-body p-0 blob-wrapper data type-text  &quot;&gt;
      
&lt;table class=&quot;highlight tab-size js-file-line-container&quot; data-tab-size=&quot;8&quot; data-paste-markdown-skip&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L1&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;1&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC1&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;package hawaijar.effectivejava;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L2&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;2&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC2&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;
&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L3&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;3&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC3&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;enum Category{&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L4&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;4&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC4&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;	FICTION,&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L5&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;5&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC5&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;	BIOGRAPHY,&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L6&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;6&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC6&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;	POEM,&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L7&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;7&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC7&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;	COMICS&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L8&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;8&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC8&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;}&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L9&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;9&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC9&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;class Book {&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L10&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;10&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC10&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;	public String name;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L11&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;11&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC11&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;	public String author;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L12&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;12&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC12&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;	public int ranking;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L13&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;13&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC13&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;	public int rankingYear;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L14&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;14&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC14&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;	public String publisher;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L15&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;15&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC15&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;	// normal constructor(s)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L16&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;16&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC16&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;	public Book(String name, String author, int ranking, int rankingYear, String publisher) {&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L17&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;17&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC17&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;		this.name = name;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L18&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;18&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC18&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;		this.author = author;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L19&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;19&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC19&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;		this.ranking = ranking;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L20&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;20&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC20&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;		this.rankingYear = rankingYear;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L21&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;21&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC21&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;		this.publisher = publisher;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L22&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;22&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC22&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;	}&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L23&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;23&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC23&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;	public Book(String name, String author) {&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L24&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;24&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC24&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;		this.name = name;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L25&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;25&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC25&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;		this.author = author;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L26&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;26&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC26&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;	}&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L27&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;27&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC27&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;	public Book(String name, String author, String publisher) {&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L28&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;28&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC28&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;		this.name = name;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L29&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;29&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC29&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;		this.author = author;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L30&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;30&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC30&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;		this.publisher = publisher;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L31&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;31&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC31&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;	}&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L32&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;32&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC32&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;	// default constructor&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L33&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;33&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC33&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;	public Book(){}&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L34&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;34&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC34&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;
&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L35&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;35&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC35&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;	final private static Book TREASURE_ISLAND = new Book(&amp;quot;Treasure Island&amp;quot;, &amp;quot;R.L Stevenson&amp;quot;);&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L36&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;36&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC36&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;		// 1. Static factory has meaningful name unlike constructor&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L37&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;37&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC37&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;	public static Book createBook(String name, String author, String publisher, boolean topRanking) {&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L38&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;38&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC38&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;		// 2. Static factory, unlike constructor, doesn&amp;#39;t need to create new instance every time, in some cases&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L39&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;39&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC39&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;		if(name.equals(&amp;quot;Treasure Island&amp;quot;)) {&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L40&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;40&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC40&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;			return TREASURE_ISLAND;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L41&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;41&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC41&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;		}&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L42&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;42&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC42&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;		// 3. Static factory, unlike constructor, can return sub-types as well.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L43&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;43&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC43&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;		if(name.equals(&amp;quot;My experiment with truth&amp;quot;)) {&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L44&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;44&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC44&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;			return Biography.MY_EXPERIMENT_WITH_TRUTH;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L45&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;45&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC45&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;		}&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L46&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;46&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC46&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;		// 4. Static factory can return different sub-types based on input parameters.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L47&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;47&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC47&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;		if(publisher.toLowerCase().contains(&amp;quot;dc&amp;quot;) || publisher.toLowerCase().contains(&amp;quot;marvel&amp;quot;)) {&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L48&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;48&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC48&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;			return new Comics(name, author, publisher);&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L49&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;49&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC49&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;		}&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L50&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;50&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC50&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;		else if(name.toLowerCase().contains(&amp;quot;harry porter&amp;quot;)) {&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L51&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;51&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC51&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;			return new Fiction(name, author, publisher);&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L52&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;52&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC52&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;		}&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L53&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;53&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC53&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;		else if(author.toLowerCase().contains(&amp;quot;emily dickinson&amp;quot;)) {&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L54&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;54&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC54&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;			return new Poem(name, author, publisher);&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L55&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;55&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC55&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;		}&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L56&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;56&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC56&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;		// 5. *this is the most complex point though*&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L57&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;57&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC57&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;		//    Static factory can return object/instance of the class that do not need to exist at the time of&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L58&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;58&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC58&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;		//    invocation of the factory method.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L59&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;59&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC59&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;		//    Refer this: https://stackoverflow.com/questions/11823773/understanding-the-concept-behind-service-provider-framework-like-jdbc-using-the&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L60&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;60&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC60&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;		try {&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L61&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;61&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC61&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;			if(topRanking) {&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L62&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;62&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC62&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;				// Here, we don&amp;#39;t know what&amp;#39;s the &amp;#39;top ranking book&amp;#39;.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L63&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;63&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC63&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;				// Whoever, using this static factory method has to define their own &amp;#39;top ranking book&amp;#39;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L64&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;64&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC64&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;				// based on their preferences and get the instance of it.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L65&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;65&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC65&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;				return (Book) Class.forName(System.getProperty(&amp;quot;top-ranking-book&amp;quot;)).newInstance();&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L66&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;66&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC66&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;			}&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L67&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;67&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC67&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;		}&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L68&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;68&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC68&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;		catch(Throwable t) {&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L69&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;69&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC69&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;			throw new Error(t);&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L70&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;70&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC70&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;		}&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L71&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;71&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC71&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;		return new Book(name, author, publisher);&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L72&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;72&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC72&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;	}&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L73&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;73&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC73&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;	public static Book createBookByName(String name) {&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L74&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;74&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC74&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;		return createBook(name, &amp;quot;&amp;quot;, &amp;quot;&amp;quot;, false);&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L75&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;75&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC75&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;	}&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L76&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;76&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC76&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;}&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L77&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;77&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC77&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;
&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L78&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;78&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC78&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;class Biography extends Book {&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L79&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;79&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC79&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;	final private Category category;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L80&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;80&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC80&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;	public static Biography MY_EXPERIMENT_WITH_TRUTH =&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L81&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;81&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC81&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;			new Biography(&amp;quot;My experiment with truth&amp;quot;, &amp;quot;M.K Gandhi&amp;quot;);&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L82&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;82&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC82&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;	private Biography(String name, String author) {&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L83&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;83&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC83&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;		super(name, author);&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L84&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;84&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC84&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;		this.category = Category.BIOGRAPHY;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L85&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;85&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC85&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;	}&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L86&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;86&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC86&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;	@Override&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L87&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;87&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC87&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;	public String toString() {&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L88&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;88&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC88&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;		return &amp;quot;Biography{&amp;quot; +&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L89&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;89&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC89&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;				&amp;quot;name=&amp;#39;&amp;quot; + name + &amp;quot;&amp;#39;\t&amp;quot; +&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L90&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;90&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC90&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;				&amp;quot;author=&amp;#39;&amp;quot; + author + &amp;quot;&amp;#39;\t&amp;quot; +&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L91&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;91&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC91&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;				&amp;quot;category=&amp;#39;&amp;quot; + category + &amp;quot;&amp;#39;&amp;quot; +&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L92&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;92&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC92&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;				&amp;#39;}&amp;#39;;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L93&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;93&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC93&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;	}&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L94&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;94&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC94&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;}&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L95&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;95&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC95&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;class Comics extends Book {&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L96&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;96&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC96&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;	final private Category category;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L97&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;97&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC97&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;	public Comics(String name, String author, String publisher) {&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L98&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;98&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC98&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;		super(name, author, publisher);&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L99&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;99&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC99&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;		this.category = Category.COMICS;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L100&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;100&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC100&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;	}&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L101&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;101&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC101&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;
&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L102&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;102&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC102&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;	@Override&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L103&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;103&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC103&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;	public String toString() {&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L104&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;104&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC104&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;		return &amp;quot;Comics{&amp;quot; +&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L105&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;105&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC105&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;				&amp;quot;name=&amp;#39;&amp;quot; + name + &amp;quot;&amp;#39;\t&amp;quot; +&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L106&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;106&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC106&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;				&amp;quot;author=&amp;#39;&amp;quot; + author + &amp;quot;&amp;#39;\t&amp;quot; +&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L107&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;107&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC107&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;				&amp;quot;category=&amp;#39;&amp;quot; + category + &amp;quot;&amp;#39;&amp;quot; +&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L108&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;108&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC108&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;				&amp;#39;}&amp;#39;;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L109&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;109&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC109&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;	}&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L110&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;110&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC110&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;}&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L111&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;111&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC111&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;class Fiction extends Book {&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L112&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;112&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC112&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;	final private Category category;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L113&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;113&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC113&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;	public Fiction(String name, String author, String publisher) {&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L114&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;114&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC114&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;		super(name, author, publisher);&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L115&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;115&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC115&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;		this.category = Category.FICTION;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L116&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;116&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC116&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;	}&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L117&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;117&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC117&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;}&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L118&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;118&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC118&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;class Poem extends Book {&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L119&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;119&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC119&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;	final private Category category;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L120&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;120&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC120&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;	public Poem(String name, String author, String publisher) {&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L121&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;121&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC121&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;		super(name, author, publisher);&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L122&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;122&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC122&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;		this.category = Category.POEM;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L123&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;123&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC123&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;	}&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L124&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;124&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC124&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;}&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L125&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;125&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC125&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;
&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L126&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;126&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC126&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;
&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L127&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;127&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC127&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;public class One {&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L128&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;128&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC128&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;	public static void main(String[] args) {&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L129&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;129&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC129&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;		Book one = Book.createBook(&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L130&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;130&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC130&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;				&amp;quot;The Amazing Spiderman&amp;quot;,&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L131&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;131&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC131&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;				&amp;quot;Stan Lee&amp;quot;,&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L132&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;132&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC132&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;				&amp;quot;Marvel Universe&amp;quot;,&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L133&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;133&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC133&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;				false);&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L134&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;134&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC134&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;
&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L135&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;135&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC135&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;		System.out.println(one);&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L136&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;136&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC136&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;		Book two = Book.createBookByName(&amp;quot;My experiment with truth&amp;quot;);&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L137&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;137&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC137&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;		System.out.println(two);&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L138&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;138&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC138&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;	}&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td id=&quot;file-ej-item1-L139&quot; class=&quot;blob-num js-line-number&quot; data-line-number=&quot;139&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;file-ej-item1-LC139&quot; class=&quot;blob-code blob-code-inner js-file-line&quot;&gt;}&lt;/td&gt;
      &lt;/tr&gt;
&lt;/table&gt;


  &lt;/div&gt;

  &lt;/div&gt;
&lt;/div&gt;

      &lt;/div&gt;
      &lt;div class=&quot;gist-meta&quot;&gt;
        &lt;a href=&quot;https://gist.github.com/hawaijar/42e798f6b0936798e93080933a8b8da6/raw/c680a367cd1abf00c86c14cbdf3cd4d5e35c279a/ej-item1&quot; style=&quot;float:right&quot;&gt;view raw&lt;/a&gt;
        &lt;a href=&quot;https://gist.github.com/hawaijar/42e798f6b0936798e93080933a8b8da6#file-ej-item1&quot;&gt;ej-item1&lt;/a&gt;
        hosted with &amp;#10084; by &lt;a href=&quot;https://github.com&quot;&gt;GitHub&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[I learn today - Collections.checkedList]]></title><description><![CDATA[An application of Proxy Pattern in Java language]]></description><link>https://lumen.netlify.com/posts/i-learn-today-22-Dec-2020</link><guid isPermaLink="false">https://lumen.netlify.com/posts/i-learn-today-22-Dec-2020</guid><pubDate>Tue, 22 Dec 2020 06:11:49 GMT</pubDate><content:encoded>&lt;h2 id=&quot;what-is-a-proxy-pattern&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#what-is-a-proxy-pattern&quot; aria-label=&quot;what is a proxy pattern permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;WHAT IS A PROXY PATTERN?&lt;/h2&gt;
&lt;p&gt;  To me, it’s a way of controlling access to a target object. &lt;/p&gt;
&lt;p&gt;  Let’s see with an example -&lt;/p&gt;
&lt;p&gt;  Say, we have a class Account as follow -&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Account&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; balance&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;credit&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; amount&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    balance &lt;span class=&quot;token operator&quot;&gt;+=&lt;/span&gt; amount&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;debit&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; amount&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    balance &lt;span class=&quot;token operator&quot;&gt;-=&lt;/span&gt; amount&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;  One problem with the above &lt;em&gt;debit()&lt;/em&gt; is that we don’t want to debit if there’s no sufficient fund available. So we need a way to avoid direct access to these methods (credit &amp;#x26; debit). One way is to create a mediator that checks these things and that’s where the &lt;em&gt;proxy pattern&lt;/em&gt; comes into play.&lt;/p&gt;
&lt;p&gt;  Here is the mediator class -&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;AccountProxy&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Account&lt;/span&gt; account &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Account&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;credit&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; amount&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    account&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;balance &lt;span class=&quot;token operator&quot;&gt;+=&lt;/span&gt; amount&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;debit&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; amount&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;account&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;balance &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; amount&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Insufficient fund to withdraw&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      account&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;balance &lt;span class=&quot;token operator&quot;&gt;-=&lt;/span&gt; amount&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;  And here is the client code -&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; args&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token class-name&quot;&gt;AccountProxy&lt;/span&gt; p &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;AccountProxy&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  p&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;credit&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  p&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;debit&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;120&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// here, it&apos;ll throw an exception&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;how-does-these-relate-to-collectionscheckedlist&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#how-does-these-relate-to-collectionscheckedlist&quot; aria-label=&quot;how does these relate to collectionscheckedlist permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How does these relate to &lt;em&gt;Collections.checkedList&lt;/em&gt;?&lt;/h3&gt;
&lt;p&gt;Let’s take an example and try to co-relate with the above Account example.&lt;/p&gt;
&lt;p&gt;Say, we have our code like this -&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;FloristTest&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; args&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token class-name&quot;&gt;Florist&lt;/span&gt; jane &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Florist&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token class-name&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; flowers &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		jane&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addFlowers&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;flowers&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; flower&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; flowers&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;token class-name&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;out&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;flower&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the above, we want to buy flowers from &lt;em&gt;Jane&lt;/em&gt;, asking her to get some flowers. However, by mistake, she slip her 5 cents in the flower pot as shown below -&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Florist&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;List&lt;/span&gt; flowers&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;addFlowers&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;List&lt;/span&gt; flowers&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		flowers&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Alyssa&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		flowers&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Erica&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		flowers&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Daisy&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		flowers&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// invalid data!&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When we run our code (FloristTest.java), here’s what is throwing an exception. Unfortunately, the exception is pointing at our code and that’s not the case.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;Exception in thread &amp;quot;main&amp;quot; java.lang.ClassCastException: class java.lang.Integer cannot be cast to class java.lang.String (java.lang.Integer and java.lang.String are in module java.base of loader &amp;#39;bootstrap&amp;#39;)
	at hawaijar.collections.FloristTest.main(FloristTest.java:10)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The point is that, though we defined our flowers as &lt;em&gt;List&lt;String&gt; flowers&lt;/em&gt;, there’s no way for the compiler to check the &lt;em&gt;unchecked list&lt;/em&gt; in the &lt;em&gt;addFlowers()&lt;/em&gt; because that’s also valid syntax!&lt;/p&gt;
&lt;p&gt;Imagine we’re invoking hundreds of other third-party code and if they’re using &lt;em&gt;unchecked list&lt;/em&gt;, where anything (of Object type) is allowed to add, we’ll have a problem in using those lists returned from them. And worse, finding from where the exception is causing would be a nightmare.&lt;/p&gt;
&lt;p&gt;To help finding where the exception is throwing, just like our &lt;em&gt;Account Proxy&lt;/em&gt; whose sole purpose is to throw an exception when something unintended happen, Java API introduced &lt;em&gt;Collections.checkedXXX&lt;/em&gt; methods where &lt;em&gt;XXX&lt;/em&gt; could be of various collection types. In our case, we will be using &lt;em&gt;Collections.checkedList()&lt;/em&gt; to see how it finds out the right spot of the error.&lt;/p&gt;
&lt;p&gt;Here’s the updated class -&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; args&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;token class-name&quot;&gt;Florist&lt;/span&gt; jane &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Florist&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token class-name&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; flowers &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		flowers &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Collections&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;checkedList&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;flowers&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		jane&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addFlowers&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;flowers&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; flower&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; flowers&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;token class-name&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;out&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;flower&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;  When running the programs, we’ll see where the problem occurs as shown below -&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;Exception in thread &amp;quot;main&amp;quot; java.lang.ClassCastException: Attempt to insert class java.lang.Integer element into collection with element type class java.lang.String
	at java.base/java.util.Collections$CheckedCollection.typeCheck(Collections.java:3097)
	at java.base/java.util.Collections$CheckedCollection.add(Collections.java:3145)
	at hawaijar.collections.Florist.addFlowers(Florist.java:12)
	at hawaijar.collections.FloristTest.main(FloristTest.java:10)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;  See those two things -&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Exception in thread “main” java.lang.ClassCastException: Attempt to insert class java.lang.Integer element into collection with element type class java.lang.String&lt;/li&gt;
&lt;li&gt;at hawaijar.collections.Florist.addFlowers(Florist.java:12)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;  So, here the &lt;em&gt;Collections.checkedList()&lt;/em&gt; is nothing more than a (run-time) proxy that checks if there’s any unintended operations happen and finds where it happens when such an event occurs. &lt;/p&gt;
&lt;p&gt;  During development time, we can insert that one line &lt;code class=&quot;language-text&quot;&gt;flowers = Collections.checkedList(flowers, String.class);&lt;/code&gt; and once everything is clear of any exceptions, we can remove them before pushing the code to production. It’s mentioned that there’s a cost (slight) involve in using this check method and so it’s better to comment out (or remove) before we move (our code) to production.
&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Rambling about Java - Part I]]></title><description><![CDATA[Learning again the most confusing parts of Java, one step at a time - Scope, Package]]></description><link>https://lumen.netlify.com/posts/Java</link><guid isPermaLink="false">https://lumen.netlify.com/posts/Java</guid><pubDate>Mon, 21 Dec 2020 23:46:37 GMT</pubDate><content:encoded>&lt;h2 id=&quot;item-1-package-names-are-like-family-names&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#item-1-package-names-are-like-family-names&quot; aria-label=&quot;item 1 package names are like family names permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ITEM 1: PACKAGE NAMES ARE LIKE FAMILY NAMES&lt;/h2&gt;
&lt;p&gt;  In Java, we arrange (or rather, group) files (source code) based on their common functionality, characteristics, or behaviors. Say, if we have Rose, Lily, Lavenders, etc, we would rather group them in a &lt;strong&gt;flower&lt;/strong&gt; category. Similarly, we will put Dog, Cat, Horse in an &lt;strong&gt;animal&lt;/strong&gt; category.&lt;/p&gt;
&lt;p&gt;  In Java, source files are commonly (and recommended) to organize based on what functionality they’re doing. We have &lt;strong&gt;java.util.function&lt;/strong&gt; package containing all the classes (and interfaces) related to functional interface, for example.&lt;/p&gt;
&lt;p&gt;  Within a package, each class can refer to the other classes without using the package name. It is like calling our family members by their first name say, &lt;strong&gt;John&lt;/strong&gt;. However, if our John is in the public, there might be some other John(s) like &lt;strong&gt;John Wick&lt;/strong&gt;, &lt;strong&gt;John Woo&lt;/strong&gt;, &lt;strong&gt;John carpenter&lt;/strong&gt; etc. and therefore he would be better call out (outside the family) as &lt;strong&gt;John Hawaijar&lt;/strong&gt;, where &lt;strong&gt;Hawaijar&lt;/strong&gt; being the last name (family name)&lt;/p&gt;
&lt;p&gt;  Ironically, if we invite &lt;strong&gt;John Wick&lt;/strong&gt; to a family dinner, we would call him as simply &lt;strong&gt;John&lt;/strong&gt; and not &lt;strong&gt;John Wick&lt;/strong&gt; because we know he is John Wick (&lt;em&gt;Off course, we have to be sure of our facial gesture (and direction) when we call out John as we have our John too in the family!&lt;/em&gt;)&lt;/p&gt;
&lt;p&gt;  The way of inviting another person in the family and called by their first name is what the &lt;strong&gt;import&lt;/strong&gt; statement is doing in Java.&lt;/p&gt;
&lt;p&gt;  When we say, &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;java&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;util&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token namespace&quot;&gt;java&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;util&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Arrays&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;

  &lt;span class=&quot;token class-name&quot;&gt;List&lt;/span&gt; people &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Arrays&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;asList&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;John Wick&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;John Doe&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;John Hawaijar&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;  We are inviting other classes in our class file and we don’t need to use their fully qualified names.&lt;/p&gt;
&lt;p&gt;  However, without importing the packages, we have to use the fully qualified name of those classes (just like we have to use a person’s full name - first name, last name, in the public to avoid name conflicts) as shown below -&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;
java&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;util&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;List&lt;/span&gt; people &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; java&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;util&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Arrays&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;asList&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;John Wick&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;John Doe&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;John Hawaijar&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&quot;which-one-is-better&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#which-one-is-better&quot; aria-label=&quot;which one is better permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Which one is better?&lt;/h4&gt;
&lt;p&gt;  In most of the cases, we import packages and used their class names (as in the first example) because that makes the code clean and legible.&lt;/p&gt;
&lt;p&gt; &lt;em&gt;Note&lt;/em&gt;: &lt;em&gt;I want to credit the title of this section to &lt;strong&gt;Simon Roberts&lt;/strong&gt; as I run into this amazing metaphor when he talked about the package topic in his O’Reilly OCP course &lt;a href=&quot;https://learning.oreilly.com/learning-paths/learning-path-oca/9780135944844/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://learning.oreilly.com/learning-paths/learning-path-oca/9780135944844/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Amortized analysis - Dynamic Array]]></title><description><![CDATA[Amortized analysis - Dynamic Array]]></description><link>https://lumen.netlify.com/posts/algorithm-analysis</link><guid isPermaLink="false">https://lumen.netlify.com/posts/algorithm-analysis</guid><pubDate>Sun, 14 Jun 2020 23:46:37 GMT</pubDate><content:encoded>&lt;p&gt;Amortized analysis tries to bring out the average cost of an algorithm that is composed of multiple types of operations. Asymptotic analysis (Big-O) tries to compute the worse case complexity of an algorithm assuming that all operations are same (computational cost) in nature. In some case, an algorithm may composed of different types of operations whose computational speeds are way different (each other or among themselves) and treating them at same par may not accurately render the overall complexity of those algorithms. In those cases, we need to find the average cost (or complexity) of an algorithm using Amortized analysis.&lt;/p&gt;
&lt;p&gt;Let’s say we’ve an algorithm that consists of two types of operations - F (for fast) and S (for slow). Also imagine that S’s operations happen very less frequently than that of F’s operations in the algorithm. On top of that, let’s also assume that the executions of S’s operations help to let more F’s operations happen in the near future. In other words, execution of an S operation makes more F’s operations happen comparative to F operation. In such situation, how are we going to evaluate the overall complexity of an algorithm? That’s where Amortized analysis are being used to solve such problem. &lt;/p&gt;
&lt;p&gt;Let me try to illustrate what I’m trying to emphasize using an example - Dynamic Array&lt;/p&gt;</content:encoded></item><item><title><![CDATA[My mental model for Heap Structure (Part 1)]]></title><description><![CDATA[A heap is a binary tree holding a distinct relation between every parent and their nodes - a parent's value (or key) is always less than (min-heap) or greater than (max-heap) their children ]]></description><link>https://lumen.netlify.com/posts/Heap-data-structure</link><guid isPermaLink="false">https://lumen.netlify.com/posts/Heap-data-structure</guid><pubDate>Thu, 11 Jun 2020 23:46:37 GMT</pubDate><content:encoded>&lt;p&gt;A heap is a binary tree holding a distinct relation between every parent and their nodes - a parent’s value (or key) is always less than (min-heap) or greater than (max-heap) their children.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/media/heap.jpg&quot; alt=&quot;Stacked, Balanced, Perfection. www.Studio51Film.com&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;tldr&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#tldr&quot; aria-label=&quot;tldr permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TLDR&lt;/h4&gt;
&lt;p&gt;Here’s a quick take-away if you don’t want to read the whole thing.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A (min)heap data-structure (a.k.a Priority queue) is model as a binary tree where each parent node’s value (or key) is always less than (or equal to) their children.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;They’re conveniently implemented using an array.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;For a parent node at index ‘n’, you’ll find their children at &lt;strong&gt;(2n + 1)&lt;/strong&gt; and &lt;strong&gt;(2n + 2)&lt;/strong&gt; indices.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;For a node at index ‘n’, you’ll find its parent at index &lt;strong&gt;Floor(n - 1)/2&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;For adding an element, we add at the end of the array and &lt;em&gt;bubble- up&lt;/em&gt; the array(beginning).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;For deletion, we replace the first element with the last element and &lt;em&gt;bubble-down&lt;/em&gt; the array(end).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;We shall be explaining on “min-heap” though the same concept can be equivalently applied to “max-heap” as well.&lt;/p&gt;
&lt;p&gt;The term “heap” doesn’t reflect anything, at least to me, on the nature of this tree (read — binary tree) and if you see the photo above, that’s the real-world concept of a heap — a random collection of things placed haphazardly on top of each other. However, the structure that we are discussing here maintains a strict ordering between the items and therefore doesn’t resemble this mental modal whatsoever shape or form.&lt;/p&gt;
&lt;p&gt;On top of this (the difference between the real-concept and abstract-concept), almost all of the discussion on heap structure started right away explaining with Binary Tree structure and immediately implemented using the Array structure. What is missing though is the explanation of why we model it as one structure (binary tree) but implemented with another structure (i.e. Array in this case). In order to understand this concern, we need to dive deeper and look again into the heap property and the algorithms to add and delete items from it.&lt;/p&gt;
&lt;p&gt;Before that, you may ask me — how do I map (or hook) the concept of the heap into my mental model? The way I remember is that heap is nothing but a fancy name of “Priority Queue” — a queue of things where each thing carries a weight called “priority” with it. In such queue, low priority element is served before an element with high priority (the reverse is true for max-heap)&lt;/p&gt;
&lt;p&gt;With that interpretation, let’s jump into the analysis.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Heap property - Every parent node (read as node’s value) must be smaller  than or equal to its children (left &amp;#x26; right child), In other words, every parent node must not be greater than its left and right sub-tree(s).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;How would we satisfy this property using Binary Tree in all operations, notably during addition and deletion of items?&lt;/p&gt;
&lt;p&gt;For binary search tree(BST), as the parent node is always between its left child and right child, insertion and deletion are easily done using a well-defined BST algorithms. &lt;/p&gt;
&lt;p&gt;For heap binary tree, let’s start a thought analysis with a single node P. That is also a heap. No problem. Let’s assume there’re new items M and N coming in, and imagine that they’re smaller than P. On what basis would we decide that which one would be a left or right child? We can’t just decide randomly there. Again, if they are larger than P or if anyone is larger than P, how would we decide the final arrangement without breaking the heap property. We can’t arrange them randomly because it may break the heap property at some insertion or/and deletion operations.&lt;/p&gt;
&lt;p&gt;Nonetheless, there’re ways to implement this (&lt;a href=&quot;https://stackoverflow.com/questions/18241192/implement-heap-using-a-binary-tree&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://stackoverflow.com/questions/18241192/implement-heap-using-a-binary-tree&lt;/a&gt;) arrangement using binary tree itself, but we’ll not go into the details of them (perhaps another article to analyze their complexity with that of Array implementation).&lt;/p&gt;
&lt;p&gt;We will be looking at how Array might solve this issue of arranging parents and their child nodes (rather beautifully yet intuitively) though maintaining the heap property.&lt;/p&gt;
&lt;p&gt;Back to the topic, one key thing that you might already see in Array but not there in Tree is that - Array elements are uniquely ordered from 0, then 1, 2, and so on…And that’s not the case with Tree and therefore we’ve different traversals of a tree structure (Post Order, In order, Pre Order, Breadth-first, Depth-first, etc). And most notably, an array index P, &lt;u&gt;is always less than any subsequent indices that come after it&lt;/u&gt;. Sounds similar to the heap property?&lt;/p&gt;
&lt;p&gt;Let’s draw  binary tree representation of a min-heap structure and we’ll see how it can be mapped to Array easily.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/media/minheap.jpg&quot; alt=&quot;Heap Binary Tree&quot;&gt;&lt;/p&gt;
&lt;p&gt;The above binary tree can also be drawn as below. Why not? A tree could have wierd branches!😁&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/media/waterfall.jpg&quot; alt=&quot;A skewed heap binary tree&quot;&gt;&lt;/p&gt;
&lt;p&gt;And imagine, we map each node to an array element as shown below -&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/media/tree-array-map.jpg&quot; alt=&quot;Binary Tree to Array mapping&quot;&gt;&lt;/p&gt;
&lt;p&gt;Voila! we mapped the binary tree into an array representation. And interesting thing is that an array element can be treated as a parent node and all its children (which is on its right side, not necessarily adjacent one) will always be greater than or equal to its value. We now satisfied the heap property.&lt;/p&gt;
&lt;p&gt;Also, for any array element (read as node in binary heap) at array index “n”, you’ll find its children (left and right child) at &lt;u&gt;(2n + 1) and (2n + 2)&lt;/u&gt; indices respectively. And for a node at array index “n”, its parent would be found at &lt;u&gt;Floor(n - 1)/2&lt;/u&gt; as well.&lt;/p&gt;
&lt;p&gt;Well, you may thinking on how I magically derive those children locations (2n + 1) &amp;#x26; (2n + 2) for a given parent location at index n.&lt;/p&gt;
&lt;p&gt;Here’s the missing point in the earlier definition of Heap. Heap  &lt;strong&gt;is also a complete binary tree&lt;/strong&gt;. All the nodes of the tree are arranged to completely filled all levels (think of as a breadth-first/level-traversal way) except possibly the lowest level which in that case needs to be filled from the left upto a point.&lt;/p&gt;
&lt;p&gt;That’s quite mouthful 😳 . Let’ see what I mean by diagram 😁&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/media/complete-tree.jpg&quot; alt=&quot;Complete binary tree&quot;&gt;&lt;/p&gt;
&lt;p&gt;If you check the above tree, you’ll observe that the nodes are filling up level-by-level (starting from root) from left to right. So, it’s  filing up with 1 node (level 0), 2 nodes (level 1),
4 nodes (level 2) and next it should 8 maximum nodes (level 3) that we can fill up. So maximum nodes at a level n is 2ⁿ, assuming level starts from 0. Whenever a level has less number of nodes than its maximum and if we start the filling the nodes from the left, that’s what the complete binary tree is referring to (as you can see in the diagram).&lt;/p&gt;
&lt;p&gt;However, the diagram below, though it may satisfy the heap property is not a complete binary tree as we have empty slots on the left (at level 3). &lt;u&gt;This binary heap cannot be mapped to an array using the formula (2n + 1) and (2n + 2)&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/media/non-complete-tree.jpg&quot; alt=&quot;Non-complete Binary&quot;&gt;&lt;/p&gt;
&lt;p&gt;So, to cut the story short, here’s the complete definition of binary heap, rephrase again :
A heap is a &lt;strong&gt;complete binary tree&lt;/strong&gt; holding a distinct relation between every parent and their nodes - a parent’s value (or key) is always less than (min-heap) or greater than (max-heap) their children. Each node of the tree can be mapped to an array index using the formula - &lt;u&gt;A parent at index n, will have its children at indices (2n + 1) and (2n + 2) respectively.&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;In other words, only when the binary heap is almost complete, then will we able to lay down the children locations in an array, using the above formula.&lt;/p&gt;
&lt;p&gt;Finally, coming to the addition and deletion of items in Binary heap (refer TLDR above), the algorithm demands to insert an element at the end or beginning of an array and that is constant time, O(1) complexity in an array, which is not so in a binary tree. We’ll understand this when we go through the implementation part.&lt;/p&gt;
&lt;p&gt;This explains the reason why we describe Heap structure as a Binary Tree but usually implement rather as an Array structure.&lt;/p&gt;
&lt;p&gt;I know this topic is on the longer side. We would also like to discuss the a) &lt;em&gt;complexity of heap structure&lt;/em&gt;, b) &lt;em&gt;implementation (of min-heap) in Javascript&lt;/em&gt; and also c) &lt;em&gt;two primary applications of heap data structure&lt;/em&gt; - 1) &lt;strong&gt;Merging K-Sorted arrays&lt;/strong&gt; and 2) &lt;strong&gt;Djikstra’s shortest path algorithm&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;We shall discuss these remaining topics next time. So, stay tuned!&lt;/p&gt;</content:encoded></item></channel></rss>